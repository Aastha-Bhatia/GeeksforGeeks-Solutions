//{ Driver Code Starts
import java.io.*;
import java.util.*;

class Main {
    public static void main(String args[]) throws IOException {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine().trim()); // Read number of test cases

        // Loop for each test case
        while (t-- > 0) {
            String line = read.readLine().trim(); // Read the array input
            String[] numsStr = line.split(" ");   // Split the input string by spaces
            int[] nums =
                new int[numsStr.length]; // Convert string array to integer array
            for (int i = 0; i < numsStr.length; i++) {
                nums[i] = Integer.parseInt(numsStr[i]);
            }

            int target = Integer.parseInt(read.readLine().trim()); // Read target sum

            Solution ob = new Solution(); // Create an object of Solution class
            System.out.println(
                ob.perfectSum(nums, target)); // Call perfectSum and print the result
            System.out.println("~");          // Call perfectSum and print the result
        }
    }
}
// } Driver Code Ends
class Solution{
    public static void subsequencesum(int[] nums, int target, ArrayList<Integer> list, int index, int sum, int[]count){
        if(index==nums.length){
            if(sum==target){
                count[0]++;
            }
            return;
        }
        // making a choice
        // take 
        list.add(nums[index]);
        sum+=nums[index];
        subsequencesum(nums, target, list, index+1, sum, count);
        // not take
        list.remove(list.size()-1);
        sum-=nums[index];
        subsequencesum(nums, target, list, index+1, sum, count);
    }
    public int perfectSum(int[] nums, int target){
        ArrayList<Integer> list=new ArrayList<>();
        int index=0;
        int sum=0;
        int count[]=new int[1];
        subsequencesum(nums, target, list, index, sum, count);
        return count[0];
    }
}